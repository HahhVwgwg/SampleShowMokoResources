[versions]

accompanistSystemuicontroller = "0.32.0"
composeMaterialDialogsCore = "0.9.4"
composeShimmer = "1.2.0"
kotlin = "1.9.22"
agp = "8.2.2"
compose = "1.6.0-rc02"
androidx-appcompat = "1.6.1"
androidx-activityCompose = "1.8.2"
compose-uitooling = "1.6.1"
libres = "1.1.8"
mapsCompose = "4.3.0"
material3WindowSizeClassMultiplatform = "0.3.1"
multiplatformSettingsNoArg = "1.1.0"
playServicesMaps = "18.2.0"
resourcesCompose = "0.23.0"
uiToolingPreview = "1.5.11"
voyager = "1.1.0-alpha02"
composeImageLoader = "1.6.8"
napier = "2.6.1"
kotlinx-coroutines = "1.7.3"
insetsx = "0.1.0-alpha07"
ktor = "2.3.6"
kotlinx-serialization = "1.6.2"
koin = "3.5.0"
koinCompose = "1.1.0"
sqlDelight = "2.0.0-alpha05"
resource-generator = "0.23.0"
playServicesLocationVersion = "21.1.0"
androidBiometricVersion = "1.1.0"
klock = "4.0.10"

#*** Google services ***#
gms-service = "4.4.0"
firebaseBom = "32.7.1"

#*** Compose webview ***#
composeWebviewMultiplatform = "1.8.6"

[libraries]

accompanist-systemuicontroller = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanistSystemuicontroller" }
biometric = { module = "androidx.biometric:biometric", version.ref = "androidBiometricVersion" }
compose-material-dialogs-core = { module = "ca.gosyer:compose-material-dialogs-core", version.ref = "composeMaterialDialogsCore" }
compose-shimmer = { module = "com.valentinilk.shimmer:compose-shimmer", version.ref = "composeShimmer" }
compose-webview-multiplatform = { module = "io.github.kevinnzou:compose-webview-multiplatform", version.ref = "composeWebviewMultiplatform" }
material3-window-size-classMultiplatform = { module = "dev.chrisbanes.material3:material3-window-size-class-multiplatform", version.ref = "material3WindowSizeClassMultiplatform" }
image-loader-extension-moko-resources = { module = "io.github.qdsfdhvh:image-loader-extension-moko-resources", version.ref = "composeImageLoader" }
maps-compose = { module = "com.google.maps.android:maps-compose", version.ref = "mapsCompose" }
multiplatform-settings-no-arg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "multiplatformSettingsNoArg" }
play-services-maps = { module = "com.google.android.gms:play-services-maps", version.ref = "playServicesMaps" }
playServicesLocation = { module = "com.google.android.gms:play-services-location", version.ref = "playServicesLocationVersion" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-activityCompose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-uitooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose-uitooling" }
libres = { module = "io.github.skeptick.libres:libres-compose", version.ref = "libres" }
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
firebase-analytics-ktx = { module = "com.google.firebase:firebase-analytics-ktx" }
resources-compose = { module = "dev.icerock.moko:resources-compose", version.ref = "resourcesCompose" }
ui-tooling-preview = { module = "org.jetbrains.compose.ui:ui-tooling-preview", version.ref = "uiToolingPreview" }
voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
voyager-koin = { module = "cafe.adriel.voyager:voyager-koin", version.ref = "voyager" }
composeImageLoader = { module = "io.github.qdsfdhvh:image-loader", version.ref = "composeImageLoader" }
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
insetsx = { module = "com.moriatsushi.insetsx:insetsx", version.ref = "insetsx" }
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koinCompose" }
sqlDelight-driver-sqlite = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlDelight" }
sqlDelight-driver-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqlDelight-driver-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }
sqlDelight-driver-sqljs = { module = "app.cash.sqldelight:sqljs-driver", version.ref = "sqlDelight" }
sqlDelight-extensions = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }
androidx-annotation-jvm = { group = "androidx.annotation", name = "annotation-jvm", version = "1.7.0" }
time-klock = { module = "com.soywiz.korlibs.klock:klock", version.ref = "klock" }
play-services-wallet = { group = "com.google.android.gms", name = "play-services-wallet", version = "19.2.1" }

[plugins]

multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
cocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
compose = { id = "org.jetbrains.compose", version.ref = "compose" }
android-application = { id = "com.android.application", version.ref = "agp" }
libres = { id = "io.github.skeptick.libres", version.ref = "libres" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
resource-generator = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "resource-generator" }
sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
#*** Google services plugin ***#
gms = { id = "com.google.gms.google-services", version.ref = "gms-service" }