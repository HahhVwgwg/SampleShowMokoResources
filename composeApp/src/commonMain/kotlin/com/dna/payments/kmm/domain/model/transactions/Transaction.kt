package com.dna.payments.kmm.domain.model.transactions

import com.dna.payments.kmm.domain.model.online_payments.OnlinePaymentMethod
import com.dna.payments.kmm.domain.model.online_payments.TransactionType
import com.dna.payments.kmm.domain.model.status_summary.PaymentStatus
import dev.icerock.moko.parcelize.Parcelable
import dev.icerock.moko.parcelize.Parcelize

@Parcelize
data class Transaction(
    val accountId: String,
    val acquirerResponseCode: String,
    val additionalDetails: AdditionalDetails?,
    var amount: Double,
    val amountBonus: Int,
    val authCode: String,
    val authDate: String,
    val avsHouseNumberResult: String,
    val avsPostcodeResult: String,
    val avsResult: String,
    val balance: Double,
    val cardExpiryDate: String,
    val cardMask: String,
    val cardType: String?,
    val client: String,
    val confirmDate: String,
    val createdDate: String,
    val cscResult: String,
    val currency: String,
    val `data`: String,
    val description: String,
    val donationAmount: Double,
    val failureLink: String,
    val id: String,
    val invoiceId: String,
    val ipCity: String,
    val ipCountry: String,
    val ipDistrict: String,
    val ipLatitude: Double,
    val ipLongitude: Double,
    val ipRegion: String,
    val issuer: String,
    val issuerBankCountry: String,
    val language: String,
    val merchant: String,
    val paAuthentication: String,
    val paEnrollment: String,
    val payerEmail: String,
    val payerIp: String,
    val payerName: String,
    val payerPhone: String,
    val paymentMethod: OnlinePaymentMethod,
    val payoutAmount: Double,
    val payoutDate: String,
    val postLink: String,
    val postLinkStatus: Boolean,
    val processingTypeId: Int,
    val processingTypeName: String,
    val reference: String,
    val resultMessage: String,
    val secure3D: Boolean,
    val shop: String?,
    var status: PaymentStatus,
    val transactionType: TransactionType
) : Parcelable